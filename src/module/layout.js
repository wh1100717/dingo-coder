// Generated by CoffeeScript 1.9.2
define(function(require, exports, module) {
  "use strict";
  var Layout;
  Layout = (function() {
    function Layout(editor) {
      this.editor = editor;
      this.container = this.editor.container;
      this.element = this.editor.element;
      this.event_bind();
    }

    Layout.prototype.set_layout = function() {
      this.container.find(".CodeMirror").removeClass("expansiondown expansionup");
      this.container.find("#mode-tabs").removeClass("tabup tabdown");
      switch (this.element.layout) {
        case 1:
          this.container.find("#mode-tabs").removeClass("tabup").addClass("tabdown");
          this.container.find(".CodeMirror").removeClass("expansionup").addClass("expansiondown");
          this.container.find(".mode-tab").removeClass("active");
          this.container.find(".mode-tab").eq(0).trigger("click");
          break;
        case 2:
          if (this.editor.coder.typelist.length > 2) {
            this.container.find("#mode-tabs #file-dropdown-toggle #file-dropdown").hide();
            this.container.find(".CodeMirror").show().addClass("expansionup");
            this.container.find("#mode-tabs").addClass("tabup");
          } else {
            this.element.layout++;
            this.set_layout();
          }
          break;
        case 3:
          this.container.find("#mode-tabs").hide();
          this.container.find(".CodeMirror").hide();
          this.container.find("#mode-tabs #file-dropdown-toggle #file-dropdown").hide();
          this.outerheight = this.container.find("#code-editor").height();
          if (this.editor.coder.typelist.length > 2 && this.editor.ifr.ifr !== null) {
            this.outerheight = (this.outerheight + 35) / 2;
            this.container.find(".CodeMirror").eq(0).show().removeClass("expansionup").css("height", "" + this.outerheight);
            this.container.find(".CodeMirror").eq(1).show().removeClass("expansionup").css("height", "" + this.outerheight);
            this.container.find(".renderer").css({
              "height": "50%"
            });
            this.container.find(".CodeMirror").eq(2).prev().appendTo(this.container.find("#renderer-container"));
            this.container.find(".CodeMirror").eq(2).show().removeClass("expansionup").css({
              "height": "50%",
              "position": "relative",
              "top": "50%"
            }).appendTo(this.container.find("#renderer-container"));
          } else {
            this.element.layout++;
            this.set_layout();
          }
          break;
        case 4:
          if (this.editor.coder.typelist.length > 2 && this.editor.ifr.ifr !== null) {
            this.container.find("#renderer-container").children().eq(2).insertAfter(this.container.find("#code-editor .CodeMirror").eq(1));
            this.container.find("#renderer-container").children().eq(1).insertAfter(this.container.find("#code-editor .CodeMirror").eq(1));
            this.container.find(".renderer").css({
              "height": "100%"
            });
          } else if (this.editor.coder.typelist.length === 2) {
            this.outerheight = (this.outerheight + 35) / 2;
            this.container.find(".CodeMirror").show().css("height", "" + this.outerheight);
          } else if (this.editor.coder.typelist.length === 1) {
            this.outerheight = this.outerheight * 2;
            this.container.find(".CodeMirror").show().css("height", "" + this.outerheight);
          } else {
            this.element.layout++;
            this.set_layout();
          }
          break;
        default:
          this.container.find("#mode-tabs").show().addClass("tabdown");
          this.outerheight = this.container.find("#code-editor").height();
          this.container.find(".CodeMirror").css("height", "" + this.outerheight);
          this.container.find(".CodeMirror").eq(2).css({
            "top": "0"
          });
          this.element.layout = 1;
          this.set_layout();
      }
    };

    Layout.prototype.enter_fullscreen = function() {
      var base, base1, base2, base3;
      if (typeof (base = this.container[0]).requestFullscreen === "function") {
        base.requestFullscreen();
      }
      if (typeof (base1 = this.container[0]).msRequestFullscreen === "function") {
        base1.msRequestFullscreen();
      }
      if (typeof (base2 = this.container[0]).mozRequestFullScreen === "function") {
        base2.mozRequestFullScreen();
      }
      if (typeof (base3 = this.container[0]).webkitRequestFullscreen === "function") {
        base3.webkitRequestFullscreen();
      }
    };

    Layout.prototype.exit_fullscreen = function() {
      if (typeof document.exitFullscreen === "function") {
        document.exitFullscreen();
      }
      if (typeof document.msExitFullscreen === "function") {
        document.msExitFullscreen();
      }
      if (typeof document.mozCancelFullScreen === "function") {
        document.mozCancelFullScreen();
      }
      if (typeof document.webkitExitFullscreen === "function") {
        document.webkitExitFullscreen();
      }
    };

    Layout.prototype.event_bind = function() {
      var self;
      self = this;
      this.container.find("#toggle-full-screen").click(function() {
        if ($(this).hasClass("full-screen-enabled")) {
          self.exit_fullscreen();
        } else {
          self.enter_fullscreen();
        }
        return $(this).toggleClass("full-screen-enabled");
      });
      this.container.find(".iframeread").click(function() {
        if (!$(this).hasClass("active")) {
          $(this).addClass("active");
          self.container.find(".codepanel").removeClass("narrow").addClass("expansionleft");
          return self.container.find(".renderpanel").removeClass("expansion").addClass("narrowleft");
        } else if (self.container.find(".coderead").hasClass("active")) {
          $(this).removeClass("active");
          self.container.find(".codepanel").removeClass("expansionleft narrowleft").addClass('narrow');
          return self.container.find(".renderpanel").removeClass("narrowleft expansionleft").addClass('expansion');
        } else {
          self.container.find(".coderead").click();
          return setTimeout(function() {
            return self.container.find(".iframeread").click();
          }, 500);
        }
      });
      this.container.find(".coderead").on("click", function() {
        if (!$(this).hasClass("active")) {
          $(this).addClass("active");
          self.container.find(".renderpanel").removeClass("narrow").addClass("expansionleft");
          return self.container.find(".codepanel").removeClass("expansion").addClass("narrowleft");
        } else if (self.container.find(".iframeread").hasClass("active")) {
          $(this).removeClass("active");
          self.container.find(".renderpanel").removeClass("expansionleft narrowleft").addClass("narrow");
          return self.container.find(".codepanel").removeClass("narrowleft expansionleft").addClass("expansion");
        } else {
          self.container.find(".iframeread").click();
          return setTimeout(function() {
            return self.container.find(".coderead").click();
          }, 500);
        }
      });
      return this.container.find(".setting").on("click", function() {
        $(this).toggleClass("active");
        return self.container.find("#setting-panel").animate({
          left: $(this).hasClass("active") ? "-50%" : "0%"
        }, 500);
      });
    };

    return Layout;

  })();
  return module.exports = Layout;
});
