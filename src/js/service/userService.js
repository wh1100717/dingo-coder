// Generated by CoffeeScript 1.9.2
define(function(require, exports, module) {
  "use strict";
  var Firebase, UserService;
  Firebase = require("firebase");
  UserService = (function() {

    /*
     *  UserService负责记录用户的各种信息
     *  getUser:        获取当前用户对象
     *  update:         更新用户信息
     *  set:            设置用户信息
     *  push:           数组类型可以push一个item进去
     *  remove:         删除用户的某项信息
     *  destroy:        伤处用户全部信息
     */
    function UserService(service) {
      this.service = service;
      this.user = this.service.authService.getUser();
      this.userRef = new Firebase("https://dingo-coder.firebaseio.com/users/" + this.user.uid);
    }

    UserService.prototype.getUser = function() {
      return this.user;
    };

    UserService.prototype.update = function(options, callback) {

      /* 批量更新接口
       *  @param options  {Object}, key为要更新项，value为具体的更新的值
       */
      return this.userRef.update(options, function(error) {
        return callback(error);
      });
    };

    UserService.prototype.set = function(userInfo, callback) {

      /*
       *  @param userInfo {Object} 与更新操作不同，其会直接覆盖式操作，慎用。
       */
      return this.userRef.set(userInfo, function(error) {
        return callback(error);
      });
    };

    UserService.prototype.push = function(key, item, callback) {

      /*
       *  @param key      {String}    User下的值为List类型的具体项的key，比如所hobby,可以按照如下格式来写："plan/q1/m1"表示当前用户的plan下面Q1季度下面第一个月的具体计划。
       *  @param item     {ANY}       数据中要Push的具体值。
       */
      return this.userRef.child(key).push(item, function(error) {
        return callback(error);
      });
    };

    UserService.prototype.remove = function(key, callback) {
      return this.userRef.child(key).set(null, function(error) {
        return callback(error);
      });
    };

    UserService.prototype.destroy = function(callback) {
      return this.userRef.set(null, function(error) {
        return callback(error);
      });
    };

    return UserService;

  })();
  return module.exports = UserService;
});
