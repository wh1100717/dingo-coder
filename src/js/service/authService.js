// Generated by CoffeeScript 1.9.2
define(function(require, exports, module) {
  "use strict";
  var AuthService, Firebase;
  Firebase = require("firebase");
  AuthService = (function() {
    function AuthService() {
      this.authRef = new Firebase("https://luminous-fire-9425.firebaseio.com/");
    }

    AuthService.prototype.getUser = function() {
      return this.authRef.getAuth();
    };

    AuthService.prototype.register = function(email, password, callback) {
      this.authRef.createUser({
        email: email,
        password: password
      }, function(error, userData) {
        if (callback != null) {
          return callback(error, userData);
        }
      });
    };

    AuthService.prototype.login = function(email, password, callback) {
      authRef.authWithPassword({
        email: email,
        password: password
      }, function(error, authData) {
        if (callback != null) {
          return callback(error, authData);
        }
      });
    };

    AuthService.prototype.logout = function() {
      this.authRef.unauth();
    };

    AuthService.prototype.changeEmail = function(oldEmail, newEmail, password, callback) {
      this.authRef.changeEmail({
        oldEmail: oldEmail,
        newEmail: newEmail,
        password: password
      }, function(error) {
        if (callback != null) {
          return callback(error);
        }
      });
    };

    AuthService.prototype.changePassword = function(email, oldPassword, newPassword, callback) {
      this.authRef.changePassword({
        email: email,
        oldPassword: oldPassword,
        newPassword: newPassword
      }, function(error) {
        if (callback != null) {
          return callback(error);
        }
      });
    };

    AuthService.prototype.resetPassword = function(email, callback) {
      this.authRef.resetPassword({
        email: email
      }, function(error) {
        if (callback != null) {
          return callback(error);
        }
      });
    };

    return AuthService;

  })();
  return module.exports = AuthService;
});
